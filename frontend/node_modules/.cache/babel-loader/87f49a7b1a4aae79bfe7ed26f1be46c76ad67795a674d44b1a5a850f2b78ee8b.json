{"ast":null,"code":"var _jsxFileName = \"/Users/victory.mthombeni/Dev/Repo/untitled folder/lwc/frontend/src/components/Brands/Brands.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, Suspense } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LazyBrands = /*#__PURE__*/React.lazy(_c = () => import('./Brands'));\n_c2 = LazyBrands;\nconst App = () => {\n  _s();\n  const [images, setImages] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Fetch images from the API\n    fetch('https://example.com/api/images').then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to fetch images');\n      }\n      return response.json();\n    }).then(data => {\n      // Assuming data is an array of base64 encoded SVG images\n      setImages(data);\n      setLoading(false); // Set loading state to false after data is fetched\n    }).catch(error => {\n      console.error('Error fetching images:', error);\n      setLoading(false); // Set loading state to false if there's an error\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Brands\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 33\n      }, this),\n      children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(LazyBrands, {\n        images: images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"QBslGb/yTBcjcjShOOciEvHlA24=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"LazyBrands$React.lazy\");\n$RefreshReg$(_c2, \"LazyBrands\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Suspense","jsxDEV","_jsxDEV","LazyBrands","lazy","_c","_c2","App","_s","images","setImages","loading","setLoading","fetch","then","response","ok","Error","json","data","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","fallback","_c3","$RefreshReg$"],"sources":["/Users/victory.mthombeni/Dev/Repo/untitled folder/lwc/frontend/src/components/Brands/Brands.jsx"],"sourcesContent":["import React, { useState, useEffect, Suspense } from 'react';\n\nconst LazyBrands = React.lazy(() => import('./Brands'));\n\nconst App = () => {\n    const [images, setImages] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        // Fetch images from the API\n        fetch('https://example.com/api/images')\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error('Failed to fetch images');\n                }\n                return response.json();\n            })\n            .then(data => {\n                // Assuming data is an array of base64 encoded SVG images\n                setImages(data);\n                setLoading(false); // Set loading state to false after data is fetched\n            })\n            .catch(error => {\n                console.error('Error fetching images:', error);\n                setLoading(false); // Set loading state to false if there's an error\n            });\n    }, []);\n\n    return (\n        <div className=\"app\">\n            <h1>Brands</h1>\n            <Suspense fallback={<div>Loading...</div>}>\n                {loading ? (\n                    <div>Loading...</div>\n                ) : (\n                    <LazyBrands images={images} />\n                )}\n            </Suspense>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,MAAMC,UAAU,gBAAGN,KAAK,CAACO,IAAI,CAAAC,EAAA,GAACA,CAAA,KAAM,MAAM,CAAC,UAAU,CAAC,CAAC;AAACC,GAAA,GAAlDH,UAAU;AAEhB,MAAMI,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACZ;IACAc,KAAK,CAAC,gCAAgC,CAAC,CAClCC,IAAI,CAACC,QAAQ,IAAI;MACd,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;MAC7C;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,IAAI;MACV;MACAT,SAAS,CAACS,IAAI,CAAC;MACfP,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC,CACDQ,KAAK,CAACC,KAAK,IAAI;MACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9CT,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIV,OAAA;IAAKqB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAChBtB,OAAA;MAAAsB,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACf1B,OAAA,CAACF,QAAQ;MAAC6B,QAAQ,eAAE3B,OAAA;QAAAsB,QAAA,EAAK;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAE;MAAAJ,QAAA,EACrCb,OAAO,gBACJT,OAAA;QAAAsB,QAAA,EAAK;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,gBAErB1B,OAAA,CAACC,UAAU;QAACM,MAAM,EAAEA;MAAO;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAChC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEd,CAAC;AAAApB,EAAA,CApCKD,GAAG;AAAAuB,GAAA,GAAHvB,GAAG;AAsCT,eAAeA,GAAG;AAAC,IAAAF,EAAA,EAAAC,GAAA,EAAAwB,GAAA;AAAAC,YAAA,CAAA1B,EAAA;AAAA0B,YAAA,CAAAzB,GAAA;AAAAyB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}